searchState.loadedDescShard("glean", 0, "Glean is a modern approach for recording and sending …\nThe metric is reset on application restart\nOptional product attribution metrics carried in …\n1 byte\nMetrics included in every ping as <code>client_info</code>.\nThe common case: just a CMD.\nThe common set of data shared across all different metric …\nThe Glean configuration.\nConfiguration builder.\nThe custom_distribution-specific case.\nRepresentation of a date, time and timezone.\nTruncate to day precision.\nA snapshot of all buckets and the accumulated sum of a …\nOptional product distribution metrics carried in …\nContains the error value\nA specialized <code>Error</code> type for this crate’s operations.\nThe possible error types for metric recording.\nA histogram with exponential distributed buckets.\n2^30 bytes\nThe object holding meta information about a Glean instance.\nDifferent kinds of histograms.\nTruncate to hour precision.\nFor when the label of a labeled metric does not match the …\nFor when the value to be recorded overflows the …\nFor when the metric caught an invalid state while recording\nFor when the value to be recorded does not match the …\n2^10 bytes\nThe metric data needed to construct inner submetrics.\nThe supported metrics’ lifetimes.\nA histogram with linear distributed buckets.\n2^20 bytes\nThe memory_distribution-specific case.\nDifferent resolutions supported by the memory related …\nA <code>MetricIdentifier</code> describes an interface for retrieving an\nTruncate to microsecond precision.\nTruncate to millisecond precision.\nTruncate to minute precision.\nTruncate to nanosecond precision.\nContains the success value\nThe metric is reset with each sent ping\nHow to specify the rate at which pings may be uploaded …\nA rate value as given by its numerator and denominator.\nRepresents the recorded data for a single event.\nDeserialized experiment data.\nA specialized <code>Result</code> type for this crate’s operations.\nTruncate to second precision.\nDifferent resolutions supported by the time related metric …\nIdentifier for a running timer.\nThe timing_distribution-specific case.\nThe metric is reset with each user profile\nThe build identifier generated by the CI system (e.g. “…\nThe user visible version string (e.g. “1.0.3”).\nThe application ID (will be sanitized during …\nRequired: The application ID (will be sanitized during …\nSet configuration to override the default state, typically …\nConverts a value in the given unit to bytes.\nGets the recorded experiment data as a JSON value.\nConverts a duration in the given unit to nanoseconds.\nString representation of the lifetime.\nThe error type’s metric id\nThe experiment’s branch as set through …\nGenerate the full configuration.\nThe attribution campaign (e.g. “mozilla-org”).\nInstructs the Metrics Ping Scheduler’s thread to exit …\nThe metric’s category.\nThe event’s category.\nThe product-provided release channel (e.g. “beta”).\n<strong>This is not meant to be used directly.</strong>\nThe attribution content (e.g. “firefoxview”).\nThe total number of entries in the distribution.\nPath to a directory to store all data in.\nRequired: Path to a directory to store all data in.\nThe day of the month.\nReturn the value for the debug view tag or <code>None</code> if it hasn…\nWhether Glean should delay persistence of data from …\nOptional: Whether Glean should delay persistence of data …\nA rate’s denominator\nDestroys the database.\nWhether or not the metric is disabled.\nConverts a duration to the requested time unit.\nDynamic label.\nWhether to add a wallclock timestamp to all events.\nWhether to add a wallclock timestamp to all events.\nWhether to enable internal pings. Default: true\nWhether to enable internal pings. Default: true\nGets a handle to the event database.\nAn experimentation identifier derived by the application …\nAn experimentation identifier derived by the application …\nA map of all extra data values.\nAny extra data associated with this experiment through …\nFormats the given time unit, truncating the time if needed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the application ID as specified on instantiation.\nGets the data path of this instance.\nRetrieve the category, name and (maybe) label of the metric\nGets the maximum number of events to store before sending …\nGets a <code>PingType</code> by name.\nGets a list of currently registered ping names.\nGets a list of currently registered ping names.\nReturns a timestamp corresponding to “now” with …\nGets the next task for an uploader.\nSet the remote configuration values for the metrics’ …\nGets the currently set debug view tag.\nGets the current log pings value.\nPerforms the collection/cleanup operations required by …\nPerforms the collection/cleanup operations required by …\nPerforms the collection/cleanup operations required by …\nPerforms the collection/cleanup operations required by …\nThe hour. 0-23\nThis timer’s id.\nCreates and initializes a new Glean object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<strong>This is not meant to be used directly.</strong>\nWhether or not this is the first run on this profile.\nCheck if a ping is enabled.\nDetermines whether upload is enabled.\nReturn an iterator over all possible error types.\nReturns the kind of the current error instance.\nThe metric’s lifetime.\nThe locale of the application during initialization (e.g. …\nThe internal logging level.\nOptional: The internal logging level. Default: <code>None</code>\nReturn the value for the log pings debug option or <code>false</code> …\nThe maximum number of events to store before sending a …\nOptional: The maximum number of events to store before …\nThe attribution medium (e.g. “organic” for a search …\nThe minute. 0-59.\nThe month, 1=January.\nThe metric’s name.\nThe distribution name (e.g. “MozillaOnline”).\nThe event’s name.\nThe nanosecond part of the time.\nHandling the Glean upload logic.\nA new configuration builder.\nCreates and initializes a new Glean object.\nCreates and initializes a new Glean object for use in a …\nIndicates an error that no requested global object is …\nA rate’s numerator\nThe timezone offset from UTC in seconds. Negative for …\nSignals that the environment is ready to submit pings.\nAsks the database to persist ping-lifetime data to disk.\nPersists <code>Lifetime::Ping</code> data that might be in memory in …\nAfter what time to auto-flush. 0 disables it.\nAfter what time to auto-flush. 0 disables it.\nWrite count threshold when to auto-flush. <code>0</code> disables it.\nWrite count threshold when to auto-flush. <code>0</code> disables it.\nA ping schedule map. Maps a ping name to a list of pings …\nA ping schedule map. Maps a ping name to a list of pings …\nNumber of pings that may be uploaded in a ping uploading …\nThe different metric types supported by the Glean SDK to …\nProcesses the response from an attempt to upload a ping.\nThe rate pings may be uploaded before they are throttled.\nOptional: The internal ping upload rate limit. Default: …\nRegister a new <code>PingType</code>.\nThe second. 0-60.\nLength of time in seconds of a ping uploading interval.\nList of ping names to include this metric in.\nThe server pings are sent to.\nOptional: The server pings are sent to. Default: <code>None</code>\nSets whether upload is enabled or not.\nSets a debug view tag.\nSets a debug view tag.\n<strong>This is not meant to be used directly.</strong>\nIndicate that an experiment is running.  Glean will then …\nIndicates that an experiment is running.\nIndicate that an experiment is no longer running.\nIndicates that an experiment is no longer running.\nDynamically set the experimentation identifier, as opposed …\nSets the log pings debug option.\nSets the log pings debug option.\nSets source tags.\nSets source tags.\n<strong>DEPRECATED</strong> Sets whether upload is enabled or not.\nSets whether upload is enabled or not.\nShuts down Glean in an orderly fashion.\nTakes a snapshot for the given store and optionally clear …\nThe attribution source (e.g. “google-play”).\nInstructs the Metrics Ping Scheduler to being scheduling …\nGets a handle to the database.\nGets an optional handle to the database.\nCollects and submits a ping for eventual uploading by name.\nCollects and submits a ping by name for eventual uploading.\nThe accumulated sum of all the samples in the distribution.\nThe attribution term (e.g. “browser with developer tools …\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>TEST-ONLY Method</strong>\n<strong>TEST-ONLY Method</strong>\n<strong>TEST-ONLY Method</strong>\n<strong>TEST-ONLY Method</strong>\nTEST ONLY FUNCTION. Returns the <code>RecordedExperiment</code> for the …\n<strong>Test-only API (exported for FFI purposes).</strong>\nTEST ONLY FUNCTION. Gets stored experimentation id.\n<strong>Test-only API (exported for FFI purposes).</strong>\nTEST ONLY FUNCTION. Checks if an experiment is currently …\nTEST ONLY FUNCTION. Resets the Glean state and triggers …\nThe timestamp of when the event was recorded.\nAPI definitions for the different metric types supported …\nWhether Glean should limit its storage to only that of …\nOptional: Whether Glean should limit its storage to only …\nCreates the client info with dummy values for all.\nUpdate self with any non-<code>None</code> fields from <code>other</code>.\nUpdate self with any non-<code>None</code> fields from <code>other</code>.\nUpdates attribution fields with new values. …\nUpdates attribution fields with new values. …\nUpdates distribution fields with new values. …\nUpdates distribution fields with new values. …\nWhether upload should be enabled.\nRequired: Whether upload should be enabled.\nThe instance of the uploader used to send pings.\nOptional: The instance of the uploader used to send pings. …\nWhether Glean should schedule “metrics” pings for you.\nOptional: Whether Glean should schedule “metrics” …\nReturns a new UTF-8 error\nA map containig the bucket index mapped to the accumulated …\nSet whether Glean should delay persistence of data from …\nSet whether to add a wallclock timestamp to all events …\nSet whether to add a wallclock timestamp to all events …\nSet whether to enable internal pings.\nSet the maximum number of events to store before sending a …\nAfter what time to auto-flush. 0 disables it.\nWrite count threshold when to auto-flush. <code>0</code> disables it.\nSet the ping schedule map.\nSet the server pings are sent to.\nSet whether Glean should limit its storage to only that of …\nSet the instance of the uploader used to send pings.\nSet whether Glean should schedule “metrics” pings for …\nThe year, e.g. 2021.\nA PingUploadRequest requiring proof of uploader capability.\nSignal that this uploader is done with work and won’t …\nInstruct the caller to end work.\nA HTTP response code.\nA simple mechanism to upload pings over HTTPS.\nThe uploader is not capable of uploading this request due …\nInstruct the caller to continue with work.\nRepresents a request to upload a ping.\nEverything you need to request a ping to be uploaded.\nA description of a component used to upload pings.\nA recoverable failure.\nAn unrecoverable upload failure.\nThe result of an attempted ping upload.\nCommunication back whether the uploader loop should …\nThe body, already content-encoded, for upload.\nThe body of the request, as a byte array. If gzip encoded, …\nWhether the body has {client|ping}_info sections in it.\nWhether the body has {client|ping}_info sections.\nCreates a new builder-style structure to help build a …\nIf you are capable of satisfying this ping upload request…\nThe Job ID to identify this request, this is the same as …\nThis uploader is done.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the label to be used in recording error counts for …\nThe HTTP headers, including any Content-Encoding.\nA map with all the headers to be sent with the request.\nA HTTP response code.\nThe uploader is not capable of uploading this request due …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerifies if current request is for a deletion-request ping.\nThe path for the server to upload the ping to.\nThe name (aka doctype) of the ping.\nThe ping’s name. Likely also somewhere in <code>path</code>.\nDecompresses and pretty-format the ping payload\nA recoverable failure.\nAn unrecoverable upload failure.\nUploads a ping to a server.\nUploads a ping to a server.\nThe capabilities required during this ping’s upload.\nThe URL the Glean SDK expects you to use to upload the …\nThe HTTP status code\nTrait for metrics that can be nested inside a labeled …\nA boolean metric.\nA counter metric.\nA custom distribution metric.\nRepresentation of a date, time and timezone.\nA datetime metric.\nA Denominator metric (a kind of count shared among Rate …\nA dual labled metric\nDeveloper-facing API for recording event metrics.\nA labeled metric.\n<strong>Experimental:</strong> A histogram buffer associated with a …\n<strong>Experimental:</strong> A histogram buffer associated with a …\n<strong>Experimental:</strong> A histogram buffer associated with a …\nA memory distribution metric.\nDeveloper-facing API for recording rate metrics with …\nDeveloper-facing API for recording object metrics.\nA ping is a bundle of related metrics, gathered in a …\nA quantity metric.\nA rate metric.\nDeserialized experiment data.\nA string list metric.\nA string metric.\nA text metric.\nA timespan metric.\nA timing distribution metric.\nA URL metric.\nAn UUID metric.\nAbandon this histogram buffer and don’t commit …\nAbandon this histogram buffer and don’t commit …\nAbandon this histogram buffer and don’t commit …\nAccumulates one sample into the histogram.\nAccumulates the provided sample in the metric.\nAccumulates one sample into the histogram.\nAccumulates one sample into the histogram.\nAccumulates precisely one duration to the metric.\nAccumulates the provided samples in the metric.\nAccumulates the provided signed samples in the metric.\nAccumulates the provided signed samples in the metric.\nAccumulates the provided signed samples in the metric.\nAccumulates precisely one signed sample and appends it to …\nAccumulates precisely one signed sample and appends it to …\nIncreases the counter by <code>amount</code>.\nIncreases the denominator by <code>amount</code>.\nAdds a new string to the list.\nIncreases the denominator by <code>amount</code>.\nIncreases the numerator by <code>amount</code>.\nIncreases the numerator by <code>amount</code>.\nThe experiment’s branch as set through …\nAborts a previous <code>set_start</code> call. No error is recorded if …\nAborts a previous <code>start</code> call.\nThe day of the month.\nAny extra data associated with this experiment through …\nWhether this ping follows the <code>collection_enabled</code> (aka …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a new random [<code>Uuid</code>’] and sets the metric to it.\nGets a specific metric for a given key/category …\nGets a specific metric for a given label.\nThe hour. 0-23\nWhether the client ID will be included in the assembled …\nWhether client/ping_info sections will be included in this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe minute. 0-59.\nThe month, 1=January.\nWhether the <code>enabled</code> field of this ping is set. Note that …\nGet the name of this Ping\nThe nanosecond part of the time.\nThe public constructor used by automatically generated …\nThe public constructor used by automatically generated …\nCreates a new ping type.\nCreates a new boolean metric.\nCreates a new counter metric.\nCreates a new memory distribution metric.\nCreates a new datetime metric.\nCreates a new denominator metric.\nCreates a new dual labeled counter from the given metric …\nCreates a new labeled metric from the given metric …\nCreates a new memory distribution metric.\nThe public constructor used by automatically generated …\nCreates a new quantity metric.\nCreates a new rate metric.\nCreates a new string metric.\nCreates a new string list metric.\nCreates a new text metric.\nCreates a new timespan metric.\nCreates a new timing distribution metric.\nCreates a new string metric.\nCreates a new UUID metric\nCreate a new labeled metric.\nThe timezone offset from UTC in seconds. Negative for …\nWhether the ping will include precise timestamps for the …\nReason codes that this ping can send.\nSee <code>traits::Event::record</code>\nRecord a new event with a provided timestamp.\nOther pings that should be scheduled when this ping is …\nThe second. 0-60.\nWhether the ping should be sent if empty.\nSets to the specified structure.\nSets to the specified boolean value.\nSets the metric to a date/time including the timezone …\nSets the value. Must be non-negative.\nSets to the specified value.\nSets to a specific list of strings.\nSets to the specified value.\nSets to the specified stringified URL.\nSets to the specified value.\nEnable or disable a ping.\nExplicitly sets the timespan value.\nExplicitly sets the timespan value in nanoseconds.\nSets to the specified structure.\nStarts tracking time for the provided metric.\nStarts tracking time for the provided metric.\n<strong>Experimental:</strong> Start a new histogram buffer associated with …\n<strong>Experimental:</strong> Start a new histogram buffer associated with …\n<strong>Experimental:</strong> Start a new histogram buffer associated with …\nStops tracking time for the provided metric. Sets the …\nStops tracking time for the provided metric and associated …\nSubmits the ping for eventual uploading.\n<strong>Test-only API</strong>\nSee <code>traits::Event::test_get_num_recorded_errors</code>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\nSee <code>traits::Event::test_get_value</code>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\n<strong>Test-only API (exported for FFI purposes).</strong>\nThe public constructor used by runtime-defined metrics.\nThe year, e.g. 2021.\nList of allowed extra keys as strings.\nA description for the <code>BooleanMetric</code> type.\nA description for the <code>CounterMetric</code> type.\nA description for the <code>CustomDistributionMetric</code> type.\nA description for the <code>DatetimeMetric</code> type.\nA description for the <code>DualLabeledCounterMetric</code> type.\nA description for the <code>EventMetric</code> type.\nThe possible errors when parsing to an extra key.\nA histogram with exponential distributed buckets.\nThe type of the allowed extra keys for this event.\nExtra keys for events.\nDifferent kinds of histograms.\nThe value doesn’t correspond to a valid extra key\nThe id doesn’t correspond to a valid extra key\nA description for the <code>LabeledMetric</code> type.\nA histogram with linear distributed buckets.\nA description for the <code>MemoryDistributionMetric</code> type.\nDefault of no extra keys for events.\nA description for the <code>NumeratorMetric</code> subtype of the …\nThis type represents all possible errors that can occur …\nAn object that can be serialized into JSON.\nA description for the <code>PingType</code> type.\nA description for the <code>QuantityMetric</code> type.\nA description for the <code>RateMetric</code> type.\nA description for the <code>StringMetric</code> type.\nA description for the <code>StringListMetric</code> type.\nA description for the <code>TextMetric</code> type.\nA description for the <code>TimespanMetric</code> type.\nA description for the <code>TimingDistributionMetric</code> type.\nA description for the <code>UrlMetric</code> type.\nA description for the <code>UuidMetric</code> type.\nAccumulates the provided sample in the metric.\nAccumulates precisely one duration to the metric.\nAccumulates the provided samples in the metric.\nAccumulates the provided signed samples in the metric.\nAccumulates the provided signed samples in the metric.\nAccumulates precisely one signed sample in the metric.\nAccumulates precisely one signed sample in the metric.\nIncreases the counter by <code>amount</code>.\nAdds a new string to the list.\nIncreases the denominator by <code>amount</code>.\nIncreases the numerator by <code>amount</code>.\nIncreases the numerator by <code>amount</code>.\nAborts a previous <code>start</code> call. No error is recorded if no …\nAborts a previous <code>start</code> call. No error is recorded if no …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize the object from its JSON representation.\nGenerates a new random <code>Uuid</code> and set the metric to it.\nGets a specific counter for a given key/category pair.\nGets a specific metric for a given label.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the event extras into 2 lists:\nSerialize this object into a JSON string.\nRecords an event.\nSets to the specified boolean value.\nSets the metric to a date/time which including the …\nSets the value. Must be non-negative.\nSets to the specified value.\nSets to a specific list of strings.\nSets to the specified value.\nSets to the specified stringified URL.\nSets to the specified value.\nExplicitly sets the timespan value.\nStarts tracking time for the provided metric.\nStart tracking time for the provided metric. Multiple …\nStops tracking time for the provided metric. Sets the …\nStops tracking time for the provided metric and associated …\nSubmits the ping for eventual uploading\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\n<strong>Exported for test purposes.</strong>\nA <strong>data structure</strong> that can be deserialized from any data …\nA <strong>data format</strong> that can deserialize any data structure …\nThe error type that can be returned if some error occurs …\nThe error type when some error occurs during serialization.\nThe output type produced by this <code>Serializer</code> during …\nA <strong>data structure</strong> that can be serialized into any data …\nType returned from <code>serialize_map</code> for serializing the …\nType returned from <code>serialize_seq</code> for serializing the …\nType returned from <code>serialize_struct</code> for serializing the …\nType returned from <code>serialize_struct_variant</code> for …\nType returned from <code>serialize_tuple</code> for serializing the …\nType returned from <code>serialize_tuple_struct</code> for serializing …\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nGeneric data structure deserialization framework.\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nHelper macro when implementing the <code>Deserializer</code> part of a …\nDetermine whether <code>Deserialize</code> implementations should …\nDetermine whether <code>Serialize</code> implementations should …\nGeneric data structure serialization framework.\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nThe input contained a boolean value that was not expected.\nThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …\nThe input contained a <code>char</code> that was not expected.\nA <strong>data structure</strong> that can be deserialized from any data …\nA data structure that can be deserialized without …\n<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …\nA <strong>data format</strong> that can deserialize any data structure …\nThe type of the deserializer being converted into.\nThe input contained an enum that was not expected.\nProvides a <code>Visitor</code> access to the data of an enum in the …\nThe <code>Error</code> trait allows <code>Deserialize</code> implementations to …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\n<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …\nThe input contained a floating point <code>f32</code> or <code>f64</code> that was …\nAn efficient way of discarding data from a deserializer.\nConverts an existing value into a <code>Deserializer</code> from which …\nThe input contained a map that was not expected.\nProvides a <code>Visitor</code> access to each entry of a map in the …\nThe input contained a newtype struct that was not expected.\nThe input contained a newtype variant that was not …\nThe input contained an <code>Option&lt;T&gt;</code> that was not expected.\nA message stating what uncategorized thing the input …\nThe input contained a sequence that was not expected.\nProvides a <code>Visitor</code> access to each element of a sequence in …\nThe input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …\n<code>Error</code> is a trait representing the basic expectations for …\nThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.\nThe input contained a struct variant that was not expected.\nThe input contained a tuple variant that was not expected.\n<code>Unexpected</code> represents an unexpected invocation of any one …\nThe input contained a unit <code>()</code> that was not expected.\nThe input contained a unit variant that was not expected.\nThe input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…\nThe type produced by using this seed.\nThe value produced by this visitor.\nThe <code>Visitor</code> that will be used to deserialize the content …\n<code>VariantAccess</code> is a visitor that is created by the …\nThis trait represents a visitor that walks through a …\nRaised when there is general error when deserializing a …\nEquivalent to the more common <code>Deserialize::deserialize</code> …\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nRaised when a <code>Deserialize</code> struct type received more than …\nFormat a message stating what data this Visitor expects to …\nFormat an explanation of what data was being expected. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this value into a deserializer.\nRaised when deserializing a sequence or map and the input …\nRaised when a <code>Deserialize</code> receives a type different from …\nRaised when a <code>Deserialize</code> receives a value of the right …\nDetermine whether <code>Deserialize</code> implementations should …\nRaised when a <code>Deserialize</code> struct type expected to receive …\nCalled when deserializing a variant with a single value.\nCalled when deserializing a variant with a single value.\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns a <code>Ok(value)</code> for the next value in the map.\nThis returns a <code>Ok(value)</code> for the next value in the map.\nProvides type-based access to context intended for error …\nReturns the number of elements remaining in the sequence, …\nReturns the number of entries remaining in the map, if …\nReturns the lower-level source of this error, if any.\nCalled when deserializing a struct-like variant.\nCalled when deserializing a tuple-like variant.\nCalled when deserializing a variant with no values.\nRaised when a <code>Deserialize</code> struct type received a field …\nRaised when a <code>Deserialize</code> enum type received a variant …\nBuilding blocks for deserializing basic values using the …\n<code>variant</code> is called to identify which variant to deserialize.\n<code>variant</code> is called to identify which variant to deserialize.\nThe input contains a boolean.\nThe input contains a byte array that lives at least as …\nThe input contains a string that lives at least as long as …\nThe input contains a byte array and ownership of the byte …\nThe input contains a byte array. The lifetime of the byte …\nThe input contains a <code>char</code>.\nThe input contains an enum.\nThe input contains an <code>f32</code>.\nThe input contains an <code>f64</code>.\nThe input contains a <code>i128</code>.\nThe input contains an <code>i16</code>.\nThe input contains an <code>i32</code>.\nThe input contains an <code>i64</code>.\nThe input contains an <code>i8</code>.\nThe input contains a key-value map.\nThe input contains a newtype struct.\nThe input contains an optional that is absent.\nThe input contains a sequence of elements.\nThe input contains an optional that is present.\nThe input contains a string. The lifetime of the string is …\nThe input contains a string and ownership of the string is …\nThe input contains a <code>u128</code>.\nThe input contains a <code>u16</code>.\nThe input contains a <code>u32</code>.\nThe input contains a <code>u64</code>.\nThe input contains a <code>u8</code>.\nThe input contains a unit <code>()</code>.\nA deserializer holding a <code>bool</code>.\nA deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;str</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;[u8]</code>. Always calls …\nA deserializer holding a <code>char</code>.\nA deserializer holding a <code>Cow&lt;str&gt;</code>.\nA deserializer holding an <code>EnumAccess</code>.\nA minimal representation of all possible errors that can …\nA deserializer holding an <code>f32</code>.\nA deserializer holding an <code>f64</code>.\nA deserializer holding an <code>i128</code>.\nA deserializer holding an <code>i16</code>.\nA deserializer holding an <code>i32</code>.\nA deserializer holding an <code>i64</code>.\nA deserializer holding an <code>i8</code>.\nA deserializer holding an <code>isize</code>.\nA deserializer holding a <code>MapAccess</code>.\nA deserializer that iterates over a map.\nA deserializer holding a <code>SeqAccess</code>.\nA deserializer that iterates over a sequence.\nA deserializer holding a <code>&amp;str</code>.\nA deserializer holding a <code>String</code>.\nA deserializer holding a <code>u128</code>.\nA deserializer holding a <code>u16</code>.\nA deserializer holding a <code>u32</code>.\nA deserializer holding a <code>u64</code>.\nA deserializer holding a <code>u8</code>.\nA deserializer holding a <code>()</code>.\nA deserializer holding a <code>usize</code>.\nCheck for remaining elements after passing a …\nCheck for remaining elements after passing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new borrowed deserializer from the given string.\nCreate a new deserializer from the given bytes.\nCreate a new borrowed deserializer from the given borrowed …\nConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.\nTrait used by <code>Serialize</code> implementations to generically …\nThe error type when some error occurs during serialization.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nHelper type for implementing a <code>Serializer</code> that does not …\nThe output type produced by this <code>Serializer</code> during …\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nA <strong>data structure</strong> that can be serialized into any data …\nReturned from <code>Serializer::serialize_map</code>.\nType returned from <code>serialize_map</code> for serializing the …\nReturned from <code>Serializer::serialize_seq</code>.\nType returned from <code>serialize_seq</code> for serializing the …\nReturned from <code>Serializer::serialize_struct</code>.\nType returned from <code>serialize_struct</code> for serializing the …\nReturned from <code>Serializer::serialize_struct_variant</code>.\nType returned from <code>serialize_struct_variant</code> for …\nReturned from <code>Serializer::serialize_tuple</code>.\nType returned from <code>serialize_tuple</code> for serializing the …\nReturned from <code>Serializer::serialize_tuple_struct</code>.\nType returned from <code>serialize_tuple_struct</code> for serializing …\nReturned from <code>Serializer::serialize_tuple_variant</code>.\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\n<code>Error</code> is a trait representing the basic expectations for …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nUsed when a <code>Serialize</code> implementation encounters any error …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nFinish serializing a sequence.\nFinish serializing a tuple.\nFinish serializing a tuple struct.\nFinish serializing a tuple variant.\nFinish serializing a map.\nFinish serializing a struct.\nFinish serializing a struct variant.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nDetermine whether <code>Serialize</code> implementations should …\nProvides type-based access to context intended for error …\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize a sequence element.\nSerialize a tuple element.\nSerialize a map entry consisting of a key and a value.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize a tuple struct field.\nSerialize a tuple variant field.\nSerialize a struct field.\nSerialize a struct variant field.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nSerialize a map key.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nSerialize a map value.\nIndicate that a struct field has been skipped.\nIndicate that a struct variant field has been skipped.\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and …")